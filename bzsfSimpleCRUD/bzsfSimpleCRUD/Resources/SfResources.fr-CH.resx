<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Grid_Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="Grid_AddFormTitle" xml:space="preserve">
    <value>Ajouter un nouvel enregistrement</value>
  </data>
  <data name="Grid_AND" xml:space="preserve">
    <value>ET</value>
  </data>
  <data name="Grid_AutoFit" xml:space="preserve">
    <value>Ajuster automatiquement cette colonne</value>
  </data>
  <data name="Grid_AutoFitAll" xml:space="preserve">
    <value>Ajuster automatiquement toutes les colonnes</value>
  </data>
  <data name="Grid_BatchSaveConfirm" xml:space="preserve">
    <value>Voulez-vous vraiment enregistrer les modifications?</value>
  </data>
  <data name="Grid_BatchSaveLostChanges" xml:space="preserve">
    <value>Les modifications non enregistrées seront perdues. Es-tu sur de vouloir continuer?</value>
  </data>
  <data name="Grid_Between" xml:space="preserve">
    <value>Entre</value>
  </data>
  <data name="Grid_Blanks" xml:space="preserve">
    <value>Blancs</value>
  </data>
  <data name="Grid_Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Grid_CancelButton" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Grid_CancelEdit" xml:space="preserve">
    <value>Voulez-vous vraiment annuler les modifications?</value>
  </data>
  <data name="Grid_ChooseColumns" xml:space="preserve">
    <value>Choisissez la colonne</value>
  </data>
  <data name="Grid_ChooseDate" xml:space="preserve">
    <value>Choisissez une date</value>
  </data>
  <data name="Grid_ClearButton" xml:space="preserve">
    <value>Clair</value>
  </data>
  <data name="Grid_ClearFilter" xml:space="preserve">
    <value>Effacer le filtre</value>
  </data>
  <data name="Grid_Columnchooser" xml:space="preserve">
    <value>Colonnes</value>
  </data>
  <data name="Grid_ConfirmDelete" xml:space="preserve">
    <value>Voulez-vous vraiment supprimer l'enregistrement?</value>
  </data>
  <data name="Grid_Contains" xml:space="preserve">
    <value>Contient</value>
  </data>
  <data name="Grid_Copy" xml:space="preserve">
    <value>Copie</value>
  </data>
  <data name="Grid_Csvexport" xml:space="preserve">
    <value>Exportation CSV</value>
  </data>
  <data name="Grid_CustomFilter" xml:space="preserve">
    <value>Filtre personnalisé</value>
  </data>
  <data name="Grid_CustomFilterDatePlaceHolder" xml:space="preserve">
    <value>Choisissez une date</value>
  </data>
  <data name="Grid_CustomFilterPlaceHolder" xml:space="preserve">
    <value>Entrez la valeur</value>
  </data>
  <data name="Grid_DateFilter" xml:space="preserve">
    <value>Filtres de date</value>
  </data>
  <data name="Grid_DateTimeFilter" xml:space="preserve">
    <value>Filtres DateTime</value>
  </data>
  <data name="Grid_Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="Grid_DeleteOperationAlert" xml:space="preserve">
    <value>Aucun enregistrement sélectionné pour l'opération de suppression</value>
  </data>
  <data name="Grid_DeleteRecord" xml:space="preserve">
    <value>Supprimer l'enregistrement</value>
  </data>
  <data name="Grid_Edit" xml:space="preserve">
    <value>Éditer</value>
  </data>
  <data name="Grid_EditFormTitle" xml:space="preserve">
    <value>Les détails de</value>
  </data>
  <data name="Grid_EditOperationAlert" xml:space="preserve">
    <value>Aucun enregistrement sélectionné pour l'opération d'édition</value>
  </data>
  <data name="Grid_EditRecord" xml:space="preserve">
    <value>Modifier l'enregistrement</value>
  </data>
  <data name="Grid_EmptyDataSourceError" xml:space="preserve">
    <value>DataSource ne doit pas être vide lors du chargement initial car les colonnes sont générées à partir de dataSource dans AutoGenerate Column Grid</value>
  </data>
  <data name="Grid_EmptyRecord" xml:space="preserve">
    <value>Aucun enregistrement à afficher</value>
  </data>
  <data name="Grid_EndsWith" xml:space="preserve">
    <value>Se termine par</value>
  </data>
  <data name="Grid_EnterValue" xml:space="preserve">
    <value>Entrez la valeur</value>
  </data>
  <data name="Grid_Equal" xml:space="preserve">
    <value>Égal</value>
  </data>
  <data name="Grid_Excelexport" xml:space="preserve">
    <value>Exportation Excel</value>
  </data>
  <data name="Grid_Export" xml:space="preserve">
    <value>Exportation</value>
  </data>
  <data name="Grid_False" xml:space="preserve">
    <value>faux</value>
  </data>
  <data name="Grid_FilterbarTitle" xml:space="preserve">
    <value> Cellule de barre de filtre</value>
  </data>
  <data name="Grid_FilterButton" xml:space="preserve">
    <value>Filtre</value>
  </data>
  <data name="Grid_FilterFalse" xml:space="preserve">
    <value>Faux</value>
  </data>
  <data name="Grid_FilterMenu" xml:space="preserve">
    <value>Filtre</value>
  </data>
  <data name="Grid_FilterTrue" xml:space="preserve">
    <value>Vrai</value>
  </data>
  <data name="Grid_FirstPage" xml:space="preserve">
    <value>Première page</value>
  </data>
  <data name="Grid_GreaterThan" xml:space="preserve">
    <value>Plus grand que</value>
  </data>
  <data name="Grid_GreaterThanOrEqual" xml:space="preserve">
    <value>Meilleur que ou égal</value>
  </data>
  <data name="Grid_Group" xml:space="preserve">
    <value>Regrouper par cette colonne</value>
  </data>
  <data name="Grid_GroupDisable" xml:space="preserve">
    <value>Le regroupement est désactivé pour cette colonne</value>
  </data>
  <data name="Grid_GroupDropArea" xml:space="preserve">
    <value>Faites glisser un en-tête de colonne ici pour regrouper sa colonne</value>
  </data>
  <data name="Grid_InvalidFilterMessage" xml:space="preserve">
    <value>Données de filtre non valides</value>
  </data>
  <data name="Grid_Item" xml:space="preserve">
    <value>article</value>
  </data>
  <data name="Grid_Items" xml:space="preserve">
    <value>articles</value>
  </data>
  <data name="Grid_LastPage" xml:space="preserve">
    <value>Dernière page</value>
  </data>
  <data name="Grid_LessThan" xml:space="preserve">
    <value>Moins que</value>
  </data>
  <data name="Grid_LessThanOrEqual" xml:space="preserve">
    <value>Inférieur ou égal</value>
  </data>
  <data name="Grid_MatchCase" xml:space="preserve">
    <value>Cas de correspondance</value>
  </data>
  <data name="Grid_Matchs" xml:space="preserve">
    <value>Aucun résultat</value>
  </data>
  <data name="Grid_NextPage" xml:space="preserve">
    <value>Page suivante</value>
  </data>
  <data name="Grid_NoResult" xml:space="preserve">
    <value>Aucun résultat</value>
  </data>
  <data name="Grid_NotEqual" xml:space="preserve">
    <value>Inégal</value>
  </data>
  <data name="Grid_NumberFilter" xml:space="preserve">
    <value>Filtres numériques</value>
  </data>
  <data name="Grid_OKButton" xml:space="preserve">
    <value>D'accord</value>
  </data>
  <data name="Grid_OR" xml:space="preserve">
    <value>OU</value>
  </data>
  <data name="Grid_Pdfexport" xml:space="preserve">
    <value>Exportation PDF</value>
  </data>
  <data name="Grid_PreviousPage" xml:space="preserve">
    <value>Page précédente</value>
  </data>
  <data name="Grid_Print" xml:space="preserve">
    <value>Impression</value>
  </data>
  <data name="Grid_Save" xml:space="preserve">
    <value>sauvegarder</value>
  </data>
  <data name="Grid_SaveButton" xml:space="preserve">
    <value>sauvegarder</value>
  </data>
  <data name="Grid_Search" xml:space="preserve">
    <value>Chercher</value>
  </data>
  <data name="Grid_SearchColumns" xml:space="preserve">
    <value>colonnes de recherche</value>
  </data>
  <data name="Grid_SelectAll" xml:space="preserve">
    <value>Tout sélectionner</value>
  </data>
  <data name="Grid_ShowRowsWhere" xml:space="preserve">
    <value>Afficher les lignes où:</value>
  </data>
  <data name="Grid_SortAscending" xml:space="preserve">
    <value>Trier par ordre croissant</value>
  </data>
  <data name="Grid_SortDescending" xml:space="preserve">
    <value>Trier par ordre décroissant</value>
  </data>
  <data name="Grid_StartsWith" xml:space="preserve">
    <value>Commence avec</value>
  </data>
  <data name="Grid_TextFilter" xml:space="preserve">
    <value>Filtres de texte</value>
  </data>
  <data name="Grid_True" xml:space="preserve">
    <value>vrai</value>
  </data>
  <data name="Grid_Ungroup" xml:space="preserve">
    <value>Dissocier par cette colonne</value>
  </data>
  <data name="Grid_UnGroupButton" xml:space="preserve">
    <value>Cliquez ici pour dissocier</value>
  </data>
  <data name="Grid_Update" xml:space="preserve">
    <value>Mise à jour</value>
  </data>
  <data name="Grid_Wordexport" xml:space="preserve">
    <value>Exportation de mots</value>
  </data>
  <data name="Pager_All" xml:space="preserve">
    <value>Tout</value>
  </data>
  <data name="Pager_CurrentPageInfo" xml:space="preserve">
    <value>{0} de {1} pages</value>
  </data>
  <data name="Pager_FirstPageTooltip" xml:space="preserve">
    <value>Aller à la première page</value>
  </data>
  <data name="Pager_LastPageTooltip" xml:space="preserve">
    <value>Aller à la dernière page</value>
  </data>
  <data name="Pager_NextPagerTooltip" xml:space="preserve">
    <value>Aller au téléavertisseur suivant</value>
  </data>
  <data name="Pager_NextPageTooltip" xml:space="preserve">
    <value>Aller à la page suivante</value>
  </data>
  <data name="Pager_PagerAllDropDown" xml:space="preserve">
    <value>Articles</value>
  </data>
  <data name="Pager_PagerDropDown" xml:space="preserve">
    <value>objets par page</value>
  </data>
  <data name="Pager_PreviousPagerTooltip" xml:space="preserve">
    <value>Aller au téléavertisseur précédent</value>
  </data>
  <data name="Pager_PreviousPageTooltip" xml:space="preserve">
    <value>Aller à la page précédente</value>
  </data>
  <data name="Pager_TotalItemsInfo" xml:space="preserve">
    <value>({0} éléments)</value>
  </data>
</root>